const o=/(?=.*[a-z])/,p=/(?=.*[A-Z])/,d=/(?=.*\d)/,c=/(?=.*[\W_])/,i=/.{8,}/,l=/^.{0,32}$/,u={lowerCase:{pattern:o,description:"Lower case letters (a-z)",pass:!1},upperCase:{pattern:p,description:"Upper case letters (A-Z)",pass:!1},digit:{pattern:d,description:"Numbers (0-9)",pass:!1},specialCharacters:{pattern:c,description:"Special characters (e.g. !@#$%^&*)",pass:!1},minCharacters:{pattern:i,description:"At least 8 characters",pass:!1},maxCharacters:{pattern:l,description:"No more than 32 characters",pass:!1}},n={required:e=>!!e||"You must enter a value",email:e=>/\S+@\S+\.\S+/.test(e)||"Enter a valid e-mail address",name:e=>new RegExp("^([\\p{L}]+[\\p{Pd}' ]?)*\\p{L}+$","u").test(e)||"Enter a valid name",phone:e=>/^\+?\d{0,3}[- ]?\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$/.test(e)||"Enter a valid phone number",phoneOrBlank:e=>!e||n.phone(e),sameAs:(e,a="Values")=>r=>e===r||`${a} must match`,date:e=>/^\d{4}-\d{2}-\d{2}$/.test(e)||"Enter a valid date",daterange:(e,a,r)=>{if(!e)return"Invalid date";const s=n.date(e);if(s!==!0)return s;const t=new Date(e);return a&&t<a?`Enter a date on or after ${a.toLocaleDateString()}`:r&&t>r?`Enter a date on or before ${r.toLocaleDateString()}`:!0},password:(e,a)=>{var s;let r=0;return(s=a.optional)==null||s.forEach(t=>{t.pass=t.pattern.test(e),r+=t.pass?1:0}),a.optionalPass=r>=a.optionalCount,a.requiredPass=!0,a.required.forEach(t=>{t.pass=t.pattern.test(e),t.pass||(a.requiredPass=!1)}),a.optionalPass&&a.requiredPass||"Enter a valid password"}};export{u as p,n as r};
